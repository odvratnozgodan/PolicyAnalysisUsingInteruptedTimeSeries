setwd("Policy Analysis using Interupted time series/Week2/")
#####################################
# ITSx: Session 2 Example Analysis
# Michael Law (michael.law@ubc.ca)
# July 2015
#####################################
###################################
# Load the necessary libraries
###################################
library(nlme)
library(car)
########################
# Read in the dataset
########################
# Two options: either use "import dataset" in RStudio, or use read.csv
data <- read.csv("/Users/michaellaw/Dropbox/edX/Course Materials/Course Datasets/nile.csv",header=T)
# Examine the dataset within RStudio
View(data)
data <- read.csv("nile.csv",header=T)
View(data)
########################
# Initial Plot
########################
# Plot outcome variable versus time
plot(data$time,data$flow,
ylab="Water Flow of the Nile",
ylim=c(0,4500),
xlab="Year",
type="l",
col="red",
xaxt="n")
# Add x-axis year labels
axis(1, at=1:60, labels=data$year)
# Add in the points for the figure
points(data$time,data$flow,
col="red",
pch=20)
# Label the weather change
abline(v=27.5,lty=2)
########################
# Modeling
########################
# A preliminary OLS regression
model_ols <- lm(flow ~ time + level + trend, data=data)
summary(model_ols)
dwt(model_ols,max.lag=12,alternative="two.sided")
# Graph the residuals from the OLS regression to check for serially correlated errors
plot(data$time,
residuals(model_ols),
type='o',
pch=16,
xlab='Time',
ylab='OLS Residuals',
col="red")
abline(h=0,lty=2)
# Plot ACF and PACF
# Set plotting to two records on one page
acf(residuals(model_ols))
acf(residuals(model_ols),type='partial')
dwt(model_ols,max.lag=12,alternative="two.sided")
plot(data$time,
residuals(model_ols),
type='o',
pch=16,
xlab='Time',
ylab='OLS Residuals',
col="red")
abline(h=0,lty=2)
model_ols <- lm(marketshare ~ time + level + trend, data=data)
data <- read.csv("antipsychotic_study.csv",header=T)
dim(data)
data["time"] <- 1:19
data["level"] <- c(rep(0, 8), rep(1, 11))
data["trend"] <- c(rep(0, 8), 1:11)
ceiling(max(data$marketshare))
########################
# Ploting
########################
plot(data$time,data$marketshare,
ylab="Market share",
ylim=c(0,ceiling(max(data$marketshare))),
xlab="Year",
type="l",
col="red",
xaxt="n")
# Add x-axis year labels
axis(1, at=1:19, labels=data$year)
# Add in the points for the figure
points(data$time,data$marketshare,
col="red",
pch=20)
# Label the weather change
abline(v=8.5,lty=2)
########################
# Modeling
########################
model_ols <- lm(marketshare ~ time + level + trend, data=data)
summary(model_ols)
confint(model_ols)
dwt(model_ols,max.lag=8,alternative="two.sided")
plot(data$time,
residuals(model_ols),
type='o',
pch=16,
xlab='Time',
ylab='OLS Residuals',
col="red")
abline(h=0,lty=2)
par(mfrow=c(1,2))
acf(residuals(model_ols))
acf(residuals(model_ols),type='partial')
data <- read.csv("nile.csv",header=T)
# Examine the dataset within RStudio
View(data)
########################
# Initial Plot
########################
# Plot outcome variable versus time
plot(data$time,data$flow,
ylab="Water Flow of the Nile",
ylim=c(0,4500),
xlab="Year",
type="l",
col="red",
xaxt="n")
# Add x-axis year labels
axis(1, at=1:60, labels=data$year)
# Add in the points for the figure
points(data$time,data$flow,
col="red",
pch=20)
# Label the weather change
abline(v=27.5,lty=2)
########################
# Modeling
########################
# A preliminary OLS regression
model_ols <- lm(flow ~ time + level + trend, data=data)
summary(model_ols)
# Durbin-watson test, 12 time periods
dwt(model_ols,max.lag=12,alternative="two.sided")
# Graph the residuals from the OLS regression to check for serially correlated errors
plot(data$time,
residuals(model_ols),
type='o',
pch=16,
xlab='Time',
ylab='OLS Residuals',
col="red")
abline(h=0,lty=2)
# Plot ACF and PACF
# Set plotting to two records on one page
par(mfrow=c(1,2))
# Produce plots
acf(residuals(model_ols))
acf(residuals(model_ols),type='partial')
data <- read.csv("antipsychotic_study.csv",header=T)
dim(data)
data["time"] <- 1:19
data["level"] <- c(rep(0, 8), rep(1, 11))
data["trend"] <- c(rep(0, 8), 1:11)
ceiling(max(data$marketshare))
########################
# Ploting
########################
plot(data$time,data$marketshare,
ylab="Market share",
ylim=c(0,ceiling(max(data$marketshare))),
xlab="Year",
type="l",
col="red",
xaxt="n")
# Add x-axis year labels
axis(1, at=1:19, labels=data$year)
# Add in the points for the figure
points(data$time,data$marketshare,
col="red",
pch=20)
# Label the weather change
abline(v=8.5,lty=2)
########################
# Modeling
########################
# A preliminary OLS regression
model_ols <- lm(marketshare ~ time + level + trend, data=data)
summary(model_ols)
confint(model_ols)
# Durbin-watson test, 12 time periods
dwt(model_ols,max.lag=8,alternative="two.sided")
# Graph the residuals from the OLS regression to check for serially correlated errors
plot(data$time,
residuals(model_ols),
type='o',
pch=16,
xlab='Time',
ylab='OLS Residuals',
col="red")
abline(h=0,lty=2)
# Plot ACF and PACF
# Set plotting to two records on one page
par(mfrow=c(1,2))
# Produce plots
acf(residuals(model_ols))
acf(residuals(model_ols),type='partial')
model_p10 <- gls(marketshare ~ time + level + trend,
data=data,
correlation=corARMA(p=0, q=0,form=~time),
method="ML")
summary(model_p10)
model_p10 <- gls(marketshare ~ time + level + trend,
data=data,
correlation=corARMA(p=0, q=0,form=~time),
method="ML")
model_p10 <- gls(marketshare ~ time + level + trend,
data=data,
correlation=NULL,
method="ML")
summary(model_p10)
model_p1 <- update(model_p10,correlation=corARMA(p=1,form=~time))
anova(model_p10,model_p11)
summary(model_p0q0)
model_p0q0 <- gls(marketshare ~ time + level + trend,
data=data,
correlation=NULL,
method="ML")
summary(model_p0q0)
model_p1q0 <- update(model_p0q0,correlation=corARMA(p=1,form=~time))
anova(model_p0q0,model_p1q0)
anova(model_p0q0,model_p0q1)
model_p0q1 <- update(model_p0q0,correlation=corARMA(q=1,form=~time))
anova(model_p0q0,model_p0q1)
12.24+(-0.13*20)-2.46+(-0.29*20)
12.24+(-0.13*20)-2.46+(-0.29)
12.24+(-0.13*20)
9.64-6.89
6.89-9.64
12.24+(-0.13*20)-2.46+(-0.29*5)
5.73-9.64
View(data)
pred <- fitted(model_p0q0)[14]
pred
pred <- fitted(model_p0q0)[14]
pred
cfac <- model_p0q0$coef[1] + model_p0q0$coef[2]*14
cfac
# Absolute change
pred - cfac
# Relative change
(pred - cfac) / cfac
(fitted(model_p0q0)[17] - (model_p0q0$coef[1] + model_p0q0$coef[2]*17)) / (model_p0q0$coef[1] + model_p0q0$coef[2]*17)
(fitted(model_p0q0)[18] - (model_p0q0$coef[1] + model_p0q0$coef[2]*18)) / (model_p0q0$coef[1] + model_p0q0$coef[2]*18)
(fitted(model_p0q0)[16] - (model_p0q0$coef[1] + model_p0q0$coef[2]*16)) / (model_p0q0$coef[1] + model_p0q0$coef[2]*16)
